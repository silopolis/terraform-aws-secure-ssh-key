---
name: pull request
on:
  pull_request:
  push:

jobs:
  # TODO: #22 add job using https://github.com/reviewdog/action-alex
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
      - name: Install prerequisites
        run: ./bin/install-ubuntu.sh
      - name: initialize Terraform
        run: terraform init --backend=false
      - name: pre-commit
        uses: pre-commit/action@v3.0.1
        env:
          AWS_DEFAULT_REGION: us-east-1
          # many of these are covered by better reviewdog linters below
          SKIP: >-
            terraform_tflint_deep,
            no-commit-to-branch,
            terraform_tflint_nocreds,
            terraform_tfsec
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Read Node.js version from package.json
        id: read_version
        run: |
          NODE_VERSION=$(jq -r '.engines.node' "lambda/package.json")
          echo "NODE_VERSION=${NODE_VERSION}" >> $GITHUB_ENV
      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        working-directory: lambda
        run: npm install
      - uses: reviewdog/action-eslint@v1
        with:
          work-directory: lambda
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          filter_mode: added
          eslint_flags: "."
          level: "error"
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Read Node.js version from package.json
        id: read_version
        run: |
          NODE_VERSION=$(jq -r '.engines.node' "lambda/package.json")
          echo "NODE_VERSION=${NODE_VERSION}" >> $GITHUB_ENV
      - name: Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        working-directory: lambda
        run: npm install
      - name: Package Lambda function
        working-directory: lambda
        run: zip -r lambda.zip .
      - name: Commit and push lambda.zip
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }} # This refers to the branch being pushed to
          force: false # Optional: force push if needed
          directory: .
          commit_message: Update lambda.zip
  tflint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: ./bin/install-ubuntu.sh
      - name: Terraform init
        run: terraform init --backend=false
      - name: tflint
        uses: reviewdog/action-tflint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          filter_mode: added
          flags: --module
          level: error
  tfsec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: ./bin/install-ubuntu.sh
      - name: Terraform init
        run: terraform init --backend=false
      - name: tfsec
        uses: reviewdog/action-tfsec@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          filter_mode: added
          level: warning
  misspell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          locale: "US"
          reporter: github-pr-check
          filter_mode: added
          level: error
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-check
          filter_mode: added
          level: error
